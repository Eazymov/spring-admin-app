/* @flow strict */

const camelCaseRegex = '^([a-z]+[A-Z]?[a-z0-9]+[A-Z]?)+$';

const config = {
  extends: [
    'stylelint-config-recommended',
    'stylelint-config-css-modules',
    'stylelint-config-prettier',
  ],
  plugins: [
    'stylelint-scss',
    'stylelint-a11y',
    'stylelint-selector-no-empty',
    'stylelint-at-rule-no-children',
    'stylelint-media-use-custom-media',
    'stylelint-high-performance-animation',
    'stylelint-selector-tag-no-without-class',
    'stylelint-declaration-block-no-ignored-properties',
  ],
  rules: {
    'at-rule-no-unknown': null,
    'color-no-invalid-hex': true,
    'font-family-no-duplicate-names': true,
    'font-family-no-missing-generic-family-keyword': true,
    'function-calc-no-unspaced-operator': true,
    'function-linear-gradient-no-nonstandard-direction': true,
    'string-no-newline': true,
    'unit-no-unknown': true,
    'property-no-unknown': true,
    'keyframe-declaration-no-important': true,
    'declaration-block-no-duplicate-properties': true,
    'declaration-block-no-shorthand-property-overrides': true,
    'block-no-empty': true,
    'selector-pseudo-class-no-unknown': [
      true,
      {
        ignorePseudoClasses: ['local', 'global'],
      },
    ],
    'selector-pseudo-element-no-unknown': true,
    'selector-type-no-unknown': true,
    'media-feature-name-no-unknown': true,
    'comment-no-empty': true,
    'no-descending-specificity': null,
    'no-duplicate-at-import-rules': true,
    'no-duplicate-selectors': true,
    'no-empty-source': true,
    'no-extra-semicolons': true,

    'scss/at-rule-no-unknown': true,
    'scss/at-else-closing-brace-newline-after': 'always-last-in-chain',
    'scss/at-else-closing-brace-space-after': 'always-intermediate',
    'scss/at-else-empty-line-before': 'never',
    'scss/at-else-if-parentheses-space-before': 'always',
    'scss/at-extend-no-missing-placeholder': true,
    'scss/at-function-pattern': camelCaseRegex,
    'scss/at-function-parentheses-space-before': 'never',
    'scss/at-if-closing-brace-newline-after': 'always-last-in-chain',
    'scss/at-if-closing-brace-space-after': 'always-intermediate',
    'scss/at-import-partial-extension-whitelist': ['scss'],
    'scss/at-mixin-argumentless-call-parentheses': 'never',
    'scss/at-mixin-named-arguments': 'always',
    'scss/at-mixin-parentheses-space-before': 'never',
    'scss/at-mixin-pattern': camelCaseRegex,
    'scss/no-duplicate-dollar-variables': [true, { ignoreInside: 'at-rule' }],
    'scss/selector-no-redundant-nesting-selector': true,
    'scss/operator-no-newline-before': true,
    'scss/operator-no-newline-after': true,
    'scss/declaration-nested-properties': 'never',
    'scss/dollar-variable-colon-space-after': 'always',
    'scss/dollar-variable-pattern': camelCaseRegex,
    'scss/percent-placeholder-pattern': camelCaseRegex,
    'scss/double-slash-comment-empty-line-before': 'always',
    'scss/double-slash-comment-inline': 'never',
    'scss/double-slash-comment-whitespace-inside': 'always',

    'csstools/media-use-custom-media': true,

    'aditayvm/at-rule-no-children': [{ ignore: ['mixin'] }],

    'plugin/stylelint-selector-no-empty': true,
    'plugin/selector-tag-no-without-class': ['div', 'span'],
    'plugin/declaration-block-no-ignored-properties': true,
    'plugin/no-low-performance-animation-properties': [
      true,
      { ignore: 'paint-properties' },
    ],

    'a11y/media-prefers-reduced-motion': null,
    'a11y/no-outline-none': null,
    'a11y/selector-pseudo-class-focus': true,
    'a11y/content-property-no-static-value': [true, { severity: 'warning' }],
    'a11y/font-size-is-readable': null,
    'a11y/line-height-is-vertical-rhythmed': null,
    'a11y/no-display-none': null,
    'a11y/no-spread-text': [true, { severity: 'warning' }],
    'a11y/no-obsolete-attribute': [true, { severity: 'warning' }],
    'a11y/no-obsolete-element': [true, { severity: 'warning' }],
    'a11y/no-text-align-justify': [true, { severity: 'warning' }],
    'a11y/media-prefers-color-scheme': null,
  },
  ignoreFiles: ['**/*.js'],
};

module.exports = config;
