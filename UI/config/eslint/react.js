/* @flow strict */

const react = {
  extends: ['plugin:react/recommended'],
  rules: {
    'react/void-dom-elements-no-children': 2,
    'react/static-property-placement': [2, 'static public field'],
    'react/jsx-props-no-spreading': 0,
    'react/style-prop-object': 2,
    'react/state-in-constructor': 0,
    'react/sort-comp': [
      2,
      {
        order: [
          'static-variables',
          'static-methods',
          'displayName',
          'defaultProps',
          'getDerivedStateFromProps',
          'getChildContext',
          'propTypes',
          'contextTypes',
          'childContextTypes',
          'state',
          'type-annotations',
          'instance-variables',
          'constructor',
          'componentWillMount',
          'UNSAFE_componentWillMount',
          'componentDidMount',
          'componentWillReceiveProps',
          'UNSAFE_componentWillReceiveProps',
          'shouldComponentUpdate',
          'componentWillUpdate',
          'UNSAFE_componentWillUpdate',
          'getSnapshotBeforeUpdate',
          'componentDidUpdate',
          'componentDidCatch',
          'componentWillUnmount',
          'instance-methods',
          'everything-else',
          'render',
        ],
      },
    ],
    'react/self-closing-comp': 2,
    'react/require-render-return': 2,
    'react/require-default-props': 0,
    'react/react-in-jsx-scope': 2,
    'react/prefer-stateless-function': 2,
    // 'react/prefer-read-only-props': 2,
    'react/prefer-es6-class': 2,
    'react/no-will-update-set-state': 2,
    'react/no-unused-state': 2,
    'react/no-unsafe': 2,
    'react/no-unused-prop-types': 0,
    'react/no-unknown-property': 2,
    'react/no-unescaped-entities': 2,
    'react/no-typos': 2,
    'react/no-this-in-sfc': 2,
    'react/no-string-refs': 2,
    'react/no-render-return-value': 2,
    'react/no-redundant-should-component-update': 2,
    'react/no-multi-comp': 0,
    'react/no-is-mounted': 2,
    'react/no-find-dom-node': 2,
    'react/no-direct-mutation-state': 2,
    'react/no-did-update-set-state': 2,
    'react/no-did-mount-set-state': 2,
    'react/no-deprecated': 2,
    'react/no-danger-with-children': 2,
    'react/no-children-prop': 2,
    'react/no-array-index-key': 2,
    'react/no-access-state-in-setstate': 2,
    'react/jsx-wrap-multilines': [
      2,
      {
        declaration: 'parens',
        assignment: 'parens',
        return: 'parens',
        arrow: 'parens',
        condition: 'ignore',
        logical: 'ignore',
        prop: 'ignore',
      },
    ],
    'react/jsx-tag-spacing': [
      2,
      {
        closingSlash: 'never',
        beforeSelfClosing: 'always',
        afterOpening: 'never',
        beforeClosing: 'never',
      },
    ],
    'react/jsx-props-no-multi-spaces': 2,
    'react/jsx-pascal-case': 2,
    'react/jsx-no-undef': 2,
    'react/jsx-no-target-blank': 2,
    'react/jsx-no-duplicate-props': 2,
    'react/jsx-no-comment-textnodes': 2,
    'react/jsx-no-bind': 2,
    'react/jsx-key': 2,
    'react/jsx-indent': [
      2,
      2,
      {
        checkAttributes: true,
      },
    ],
    'react/jsx-indent-props': 2,
    'react/jsx-fragments': [2, 'syntax'],
    'react/jsx-filename-extension': [2, { extensions: ['.js'] }],
    'react/jsx-equals-spacing': [2, 'never'],
    'react/jsx-curly-spacing': [2, { when: 'never' }],
    'react/jsx-closing-tag-location': 2,
    'react/jsx-closing-bracket-location': 2,
    'react/jsx-boolean-value': [2, 'never'],
    'react/button-has-type': 2,
    'react/default-props-match-prop-types': 0,
    'react/destructuring-assignment': 0,
    'react/display-name': 0,
    'react/prop-types': 0,
    'react/no-danger': 0,
  },
  plugins: ['react'],
  settings: {
    react: {
      pragma: 'React',
      version: 'detect',
      flowVersion: '0.89',
    },
  },
};

exports.react = react;
